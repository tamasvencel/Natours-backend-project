require("@babel/polyfill");var e=require("axios");function t(e){return e&&e.__esModule?e.default:e}/* eslint-disable *//*because it is configured for node.js *//* eslint-disable *//*because it is configured for node.js *//* eslint-disable *//*because it is configured for node.js */// type is "success" or "error"
const o=(e,t)=>{a();let o=`<div class="alert alert--${e}">${t}</div>`;document.querySelector("body").insertAdjacentHTML("afterbegin",o),window.setTimeout(a,5e3)},a=()=>{let e=document.querySelector(".alert");e&&e.parentElement.removeChild(e)},s=async(a,s)=>{try{let n=await t(e)({method:"POST",url:"/api/v1/users/login",data:{email:a,password:s}});"success"===n.data.status&&(o("success","Logged in successfully!"),window.setTimeout(()=>{location.assign("/")},1e3))}catch(e){o("error",e.response.data.message)}},n=async()=>{try{let o=await t(e)({method:"GET",url:"/api/v1/users/logout"});"success"===o.data.status&&location.assign("/")}catch(e){o("error","Error when logging out! Try again.")}},r=async(a,s,n,r)=>{try{let d=await t(e)({method:"POST",url:"/api/v1/users/signup",data:{name:a,email:s,password:n,passwordConfirm:r}});"success"===d.data.status&&(o("success","Account created successfully!"),window.setTimeout(()=>{location.assign("/")},1e3))}catch(e){o("error",e.response.data.message)}},d=async(a,s)=>{try{let n="password"===s?"/api/v1/users/updatePassword":"/api/v1/users/updateMe",r=await t(e)({method:"PATCH",url:n,data:a});"success"===r.data.status&&(o("success",`${s} updated successfully!`),window.setTimeout(()=>{location.reload()},2e3))}catch(e){o("error",e.response.data.message)}},c=Stripe("pk_test_51NojgRFcZkqRpT2CJ0r1RzZoCcA3epvhnDaGeIdykiwdQJK40yMMZVkHFCXdoEMRuWntNinHOAlUznlkSw4W35AP00ltUSEWQk"),u=async a=>{try{// 1. Get checkout session from API
let o=await t(e)(`/api/v1/bookings/checkout-session/${a}`);// 2. Create checkout form + charge credit card
await c.redirectToCheckout({sessionId:o.data.session.id})}catch(e){console.log(e),o("error",e)}},l=document.querySelector(".form--login"),i=document.getElementById("map"),m=document.querySelector(".nav__el--logout"),p=document.querySelector(".form--signup"),y=document.querySelector(".form-user-data"),g=document.querySelector(".form-user-password"),w=document.getElementById("book-tour");// DELEGATION
if(i){let e=JSON.parse(i.dataset.locations);(e=>{var t=L.map("map",{scrollWheelZoom:!1,zoomSnap:.25,zoomControl:!1}).setView([35.111745,-120.113491],4.75),o=L.control.zoom({position:"topright"}).addTo(t),a=o._zoomInButton,s=o._zoomOutButton;// Change the width and height of the buttons
a.style.width="40px",a.style.height="30px",s.style.width="40px",s.style.height="30px",L.tileLayer("https://{s}.tile.thunderforest.com/pioneer/{z}/{x}/{y}.png?apikey=3678afbce85344c89a4b5070dcaf91d7",{attribution:'&copy; <a href="http://www.thunderforest.com/">Thunderforest</a>, &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors',apikey:"3678afbce85344c89a4b5070dcaf91d7",maxZoom:15}).addTo(t);let n=new L.LatLngBounds;e.forEach(e=>{// Create marker icon
let o=L.divIcon({className:"marker",iconAnchor:[0,45],iconSize:[32,40]}),[a,s]=e.coordinates;L.marker([s,a],{icon:o}).addTo(t),// Add the popup to the Leaflet map
L.popup({offset:[16.5,-31]}).setLatLng([e.coordinates[1],e.coordinates[0]]).setContent(`<p style="font-size: 14px;">Day ${e.day}: ${e.description}</p>`).addTo(t),// Extend map bounds to include the current location
n.extend([s,a])}),t.fitBounds(n,{paddingTopLeft:[100,200],paddingBottomRight:[100,200]})})(e)}l&&l.addEventListener("submit",e=>{let t=document.getElementById("email").value,o=document.getElementById("password").value;e.preventDefault(),s(t,o)}),m&&m.addEventListener("click",n),p&&p.addEventListener("submit",e=>{let t=document.getElementById("name").value,o=document.getElementById("email").value,a=document.getElementById("password").value,s=document.getElementById("passwordConfirm").value;e.preventDefault(),r(t,o,a,s)}),y&&y.addEventListener("submit",e=>{e.preventDefault();let t=new FormData;t.append("name",document.getElementById("name").value),t.append("email",document.getElementById("email").value),t.append("photo",document.getElementById("photo").files[0]),d(t,"data")}),g&&g.addEventListener("submit",async e=>{e.preventDefault(),document.querySelector(".btn--save-password").textContent="Updating...";let t=document.getElementById("password-current").value,o=document.getElementById("password").value,a=document.getElementById("password-confirm").value;await d({passwordCurrent:t,password:o,passwordConfirm:a},"password"),document.querySelector(".btn--save-password").textContent="Save password",document.getElementById("password-current").value="",document.getElementById("password").value="",document.getElementById("password-confirm").value=""}),w&&w.addEventListener("click",e=>{e.target.textContent="Processing...";// e.target is the element which was clicked
let{tourId:t}=e.target.dataset;u(t)});//# sourceMappingURL=bundle.js.map

//# sourceMappingURL=bundle.js.map
